package core

import "testing"

type pldr struct {
	input    string
	expected int32
}

var pldrs = []pldr{
	{"aaab", 3},
	{"baa", 0},
	{"aaa", -1},
	{"wykkttfghdvbyxbxefnltpnbdkkdbnptlnfexbxybvdhgfttkkyw", -1},
	{"xfsxrgylhgebvagwhmctvsbnqbqwwcpuhisbrtmbawsdyulxccxluydsabmtrbsihupcwwqbqnbsvtcmhwgavbeghlygrxsfx", 41},
	{"crwlgqeubhhvigsliydbuvvvvubdyilsgivhhbueqglwrc", -1},
	{"quyjjdcgsvvsgcdjjyq", 1},
	{"hgygsvlfwcwnswtuhmyaljkqlqjjqlqkjlaymhutwsnwcflvsgygh", 8},
	{"lhrxvssvxrhl", -1},
	{"fgnfnidynhxebxxxfmxixhsruldhsaobhlcggchboashdlurshxixmfxxxbexhnydinfngf", 33},
	{"", -1},
}

func TestPalindromeIndex(t *testing.T) {
	for _, test := range pldrs {
		if got := PalindromeIndex(test.input); got != test.expected {
			t.Fatalf("got %d, test expected %d", got, test.expected)
		}
	}
}
